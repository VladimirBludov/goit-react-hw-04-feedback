{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Buttons/Buttons.module.css","components/App/App.module.css","components/Section/Section.module.css","components/Statistics/Notification/Notification.module.css","components/Buttons/Buttons.js","components/Section/Section.js","components/Statistics/Notification/Notification.js","components/Statistics/Statistics.js","components/App/App.js","index.js"],"names":["module","exports","Buttons","typesButton","updateStatistics","className","s","list","map","type","item","button","onClick","Section","title","children","propType","PropTypes","string","oneOfType","arrayOf","node","isRequired","Notification","message","Statistics","good","neutral","bad","countTotal","positiveFeedback","wrapper","App","useState","setGood","setNeutral","setBad","countTotalFeedback","container","state","total","Math","ceil","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7178e6ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__1gEEG\",\"item\":\"Statistics_item__54eG8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Buttons_list__2Q8jh\",\"item\":\"Buttons_item__1xi7N\",\"button\":\"Buttons_button__1aleQ\",\"good\":\"Buttons_good__3lUDT\",\"neutral\":\"Buttons_neutral__1pH5i\",\"bad\":\"Buttons_bad__ysNIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3itRj\",\"container\":\"App_container__14lnb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__38Pgd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2s1R-\"};","import PropTypes from 'prop-types';\r\nimport s from './Buttons.module.css';\r\n\r\nexport default function Buttons({ typesButton, updateStatistics }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {typesButton.map(type => (\r\n        <li key={type} className={s.item}>\r\n          <button\r\n            className={`${s.button} ${s[type]}`}\r\n            onClick={() => updateStatistics(type)}\r\n          >\r\n            {type}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nButtons.propTypes = {\r\n  typesButton: PropTypes.arrayOf(PropTypes.oneOf(['good', 'neutral', 'bad'])),\r\n  updateStatistics: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propType = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={s.message}>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport Notification from './Notification';\r\nimport s from './Statistics.module.css';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  countTotal,\r\n  positiveFeedback = 0,\r\n}) {\r\n  return (\r\n    <>\r\n      {countTotal ? (\r\n        <ul className={s.wrapper}>\r\n          <li className={s.item}>\r\n            <span>\r\n              <b>Good:</b> {good}\r\n            </span>\r\n          </li>\r\n          <li className={s.item}>\r\n            <span>\r\n              <b>Neutral:</b> {neutral}\r\n            </span>\r\n          </li>\r\n          <li className={s.item}>\r\n            <span>\r\n              <b>Bad:</b> {bad}\r\n            </span>\r\n          </li>\r\n          <li className={s.item}>\r\n            <span>\r\n              <b>Total:</b> {countTotal}\r\n            </span>\r\n          </li>\r\n          <li className={s.item}>\r\n            <span>\r\n              <b>Positive feedback:</b> {positiveFeedback}%\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      ) : (\r\n        <Notification message=\"There is no feedback\" />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  countTotal: PropTypes.number.isRequired,\r\n  positiveFeedback: PropTypes.number.isRequired,\r\n};\r\n","import { useState } from 'react';\r\nimport Buttons from '../Buttons';\r\nimport Section from '../Section';\r\nimport Statistics from '../Statistics';\r\nimport s from './App.module.css';\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const handleUpdateStatistic = type => {\r\n    switch (type) {\r\n      case 'good':\r\n        setGood(state => state + 1);\r\n        break;\r\n      case 'neutral':\r\n        setNeutral(state => state + 1);\r\n        break;\r\n      case 'bad':\r\n        setBad(state => state + 1);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () => good + neutral + bad;\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const total = countTotalFeedback();\r\n    return total ? Math.ceil((good * 100) / total) : 0;\r\n  };\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.container}>\r\n        <Section title=\"Please leave feedback\">\r\n          <Buttons\r\n            typesButton={['good', 'neutral', 'bad']}\r\n            updateStatistics={handleUpdateStatistic}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics:\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            countTotal={countTotalFeedback()}\r\n            positiveFeedback={countPositiveFeedbackPercentage()}\r\n          />\r\n        </Section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}